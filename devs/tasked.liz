-- If is in a repository root then fetch it

IsInRepoRoot = Liz.is_dir("./.git")

-- Else try to find the Code root to fetch then all

if not IsInRepoRoot then
   CodeRootPath = Liz.path_parent_find(".", "Code")
end

if not IsInRepoRoot and CodeRootPath == "" then
   print("Could not determine a course of action to take.")
   return
end

local all_spawned = {}

if IsInRepoRoot then
   local project = Liz.path_absolute(".")
   print("Tasked on project path: " .. project)
   table.insert(all_spawned, { project, Liz.spawn("tasked.path", { project }) })
else
   print("Tasked on Code path: " .. CodeRootPath)
   local code_root = Liz.path_list_dirs(CodeRootPath)
   for _, category in ipairs(code_root) do
      local projects = Liz.path_list_dirs(category)
      for _, project in ipairs(projects) do
         table.insert(all_spawned, { project, Liz.spawn("tasked.path", { project }) })
      end
   end
end

for _, spawned in ipairs(all_spawned) do
   local project = spawned[1]
   local spawned_results = Liz.join(spawned[2])
   local returned_found = Liz.from_json(spawned_results[1])
   if returned_found then
      print("")
      print("x----------------------------------------------------x")
      print("")
      print("Tasked on project path: " .. project)
      local returned_output = Liz.from_json(spawned_results[2])
      print(Liz.trim(returned_output))
      print("")
      Liz.pause()
      print("")
   end
end
print("")
print("x----------------------------------------------------x")
