#!/bin/Liz

lines = {}
search_for = {"export class", "export enum", "export type", "export interface", "export function", "export const"}

function getName(found_line)
    local result = Liz.split_spaces(found_line)[3]
    if Liz.contains(result, "(") then
        result = Liz.split(result, "(")[1]
    end
    return result
end

function getLink(found_path)
    local result = Liz.del(found_path, 2, 6)
    local len = Liz.len(result)
    local result = Liz.del(result, len - 3, len)
    return result
end

function getAll(source)
    local founds = Liz.text_file_find_any(source, search_for)
    if founds then
        for _, found in pairs(founds) do
            local parts = Liz.text_file_founds(found)
            local identy = getName(parts[6])
            local link = getLink(parts[1])
            table.insert(lines, "export { " .. identy .. " } from '" .. link .. "';")
        end
    end
end

print("Making 'src/all.ts'...")
sources = Liz.path_list_files_ext_in("./src", ".ts")
for _, source in pairs(sources) do
    if not (source == "./src/all.ts") then
        getAll(source)
    end
end
Liz.write_lines("./src/all.ts", lines)
print("Done Make 'src/all.ts'!")
